---
title: "Bodge: Python BdG solver"
date: 2024-10-10
categories:
    - python
    - condmat
---

My Python package for numerically solving the Bogoliubov--de Gennes equations
has been [published][1] in the Journal of Open Source Software (JOSS)! 

<embed src="https://www.theoj.org/joss-papers/joss.07134/10.21105.joss.07134.pdf#toolbar=0&navpanes=0&scrollbar=0&statusbar=0&messages=0" type="application/pdf" style="width:100%; height:20%;"/>

The Bodge package is available [on GitHub][2] and [via PyPI][3], but is most
easily be installed via the latter:

    pip3 install bodge

Alternatively, if you want GPU-accelerated calculations using NVIDIA CUDA:

    pip3 install 'bodge[cuda]'

The aim of this package has been to make it as simple as possible to work
with tight-binding models for superconductivity in Python. Defining a simple
superconductor/ferromagnet hybrid on a $100\times100$ lattice is e.g. done by:
```{python}
from bodge import *

lattice = CubicLattice((100, 100, 1))
system = Hamiltonian(lattice)

t = 1.0
μ = -3.0 * t
Δ0 = 0.3 * t
M3 = 0.3 * Δ0

with system as (H, Δ):
    for i in lattice.sites():
        H[i, i] = -μ * σ0 - M3 * σ3
        Δ[i, i] = -Δ0 * jσ2
    for i, j in lattice.bonds():
        H[i, j] = -t * σ0
```
That's all that is required to define the corresponding Hamiltonian matrix,
which internally is represented as a BSR sparse matrix for efficiency and
scalability. From there on Bodge provides a number of different methods
to work with that Hamiltonian matrix, including various sparse matrix
algorithms, dense matrix algorithms, and GPU-accelerated algorithms. For
instance, to plot the LDOS at the center of the system above we can run:
```{python}
import numpy as np
import matplotlib.pyplot as plt

i = (50, 50, 0)
ω = np.linspace(-2*Δ0, 2*Δ0, 100)
ρ = system.ldos(i, ω)

plt.xlabel(r"Quasiparticle energy $\omega/t$")
plt.ylabel(r"LDOS $\rho_i(ω)/t$")
plt.plot(ω, ρ)
```
This example uses an efficient sparse matrix algorithm internally, which
runs in less than a minute on my MacBook despite the $100\times100$ lattice.
In this picture, we see a typical example of a "spin-split gapped" density
of states that is typical for a superconductor/ferromagnet hybrid structure.
To make the model more realistic, one can very easily extend the example
above to add spatial inhomogeneities of every kind. Moreover, the Bodge package
has also been used to represent more exotic materials such as [altermagnets][5]
and [unconventional superconductors][6], which is quite straight-forward.

See the [JOSS paper][1], [GitHub page][2], and [Bodge tutorial][4] for more
information on how this software package can be applied to your research.
Moreover, feel free to reach out via [email][7] if you need help.

[1]: https://joss.theoj.org/papers/10.21105/joss.07134
[2]: https://github.com/jabirali/bodge
[3]: https://pypi.org/project/bodge/
[4]: https://jabirali.github.io/bodge/tutorial.html
[5]: https://link.aps.org/doi/10.1103/PhysRevLett.131.076003
[6]: https://link.aps.org/doi/10.1103/PhysRevB.109.174506
[7]: mailto:jabir.ali.ouassou@hvl.no
